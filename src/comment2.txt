1) testDE/blob/master/src/js/forms/FormSend.js#L29: теоретически, элемент submit может быть даже не "button", а обычным input или вообще располагаться вне элемента формы, привязанным по нему посредством атрибута form. +

2) testDE/blob/master/src/js/forms/FormSend.js#L27: непонятно, для чего дополнительно оборачивать в промис асинхронный fetch. Кроме того, если sendData возвращает промис, то логично сделать данный метод асинхронным. +

3) testDE/blob/master/src/js/forms/FormSend.js#L14: метод называется "formSend", но вдовесок блокирует и разблокирует кнопки, показывает и убирает лоадер. Это не по SOLID. Нужно разбивать сложную логику на несколько методов по их зоне ответственности. +

4) testDE/blob/master/src/js/forms/FormSend.js#L28: внутренний стейт в JS (FormSend.states.isLoading) - это правильно. Но здесь две проблемы: во-первых, он никак не превентит от повтороной отправки, если юзер вручную снимет disabled с кнопки; во-вторых, это статичное поле класса, то есть при наличии нескольких форм на него бесполезно полагаться, т.к. он будет по нескольку раз перезаписываться разными инстансами. Например, при долгой отправки формы A форму Б отправить уже не получится, т.к. FormSend.states.isLoading true для ВСЕХ форм. +

5) testDE/blob/master/src/js/forms/FormValidator.js#L93: здесь уместнее использовать switch. (не понял, мне кажется, что тут нельзя так сделать, не знаю)

6) testDE/blob/master/src/js/forms/FormValidator.js#L180: будет лакончнее с classList.toggle, где вторым аргументом идет флаг. +

7) testDE/blob/master/build/js/app.2f629165c8c103b0dabd.js: скрипты следует минифицировать.

8) testDE/blob/master/src/css/toast.css: почему это лежит в корне стилей? Это же явно что-то из ui. +

9) testDE/blob/master/src/components/form/template.ejs#L6: EJS позволяет такие объекты выводить не строкой, а посредством JSON.stringify. Править конфигурацию через текст крайне неудобно. +